<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.StudentRegisterMapper">
  <resultMap id="BaseResultMap" type="com.model.StudentRegister">
    <id column="str_id" jdbcType="VARCHAR" property="strId" />
    <result column="sci_id" jdbcType="VARCHAR" property="sciId" />
    <result column="sti_id" jdbcType="VARCHAR" property="stiId" />
    <result column="str_djrq" jdbcType="TIMESTAMP" property="strDjrq" />
    <result column="str_jbr" jdbcType="VARCHAR" property="strJbr" />
    <result column="str_lqfs" jdbcType="DOUBLE" property="strLqfs" />
    <result column="str_zymc" jdbcType="VARCHAR" property="strZymc" />
  </resultMap>
  <resultMap id="BaseResultMapExtends" type="com.model.StudentRegister" extends="BaseResultMap">
    <association property="systemClassInfo" javaType="com.model.SystemClassInfo"
                 select="com.mapper.SystemClassInfoMapper.selectByPrimaryKey" column="sci_id">
    </association>
    <association property="studentInfo" javaType="com.model.StudentInfo"
                 select="com.mapper.StudentInfoMapper.selectByPrimaryKey" column="sti_id">
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Model_Where_Clause">
    <where>
      <if test="record.strId != null">
        str_id = #{record.strId,jdbcType=VARCHAR}
      </if>
      <if test="record.sciId != null">
        and sci_id = #{record.sciId,jdbcType=VARCHAR}
      </if>
      <if test="record.stiId != null">
        and sti_id = #{record.stiId,jdbcType=VARCHAR}
      </if>
      <if test="record.strDjrq != null">
        and str_djrq = #{record.strDjrq,jdbcType=TIMESTAMP}
      </if>
      <if test="record.strJbr != null">
        and str_jbr = #{record.strJbr,jdbcType=VARCHAR}
      </if>
      <if test="record.strLqfs != null">
        and str_lqfs = #{record.strLqfs,jdbcType=DOUBLE}
      </if>
      <if test="record.strZymc != null">
        and str_zymc = #{record.strZymc,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <sql id="Model_Query_Clause">
    <where>
      <if test="record.strId != null">
        str_id like concat('%', #{record.strId,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.sciId != null">
        and sci_id like concat('%', #{record.sciId,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.stiId != null">
        and sti_id like concat('%', #{record.stiId,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.strDjrq != null">
        and str_djrq like concat('%', #{record.strDjrq,jdbcType=TIMESTAMP}, '%')
      </if>
      <if test="record.strJbr != null">
        and str_jbr like concat('%', #{record.strJbr,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.strLqfs != null">
        and str_lqfs like concat('%', #{record.strLqfs,jdbcType=DOUBLE}, '%')
      </if>
      <if test="record.strZymc != null">
        and str_zymc like concat('%', #{record.strZymc,jdbcType=VARCHAR}, '%')
      </if>
    </where>
  </sql>
  <sql id="Base_Column_List">
    str_id, sci_id, sti_id, str_djrq, str_jbr, str_lqfs, str_zymc
  </sql>
  <sql id="Param_Column_List">
    <if test="fields != null and fields.length() > 0">
      ${fields}
    </if>
    <if test="fields == null or fields.length() == 0">
      <include refid="Base_Column_List" />
    </if>
  </sql>
  <sql id="Param_Where_Clause_Like">
    <where>
      <if test="field != null and field.length() > 0">
        <if test="_parameter.containsKey('value') and value != null">
          ${field} like concat('%', #{value}, '%')
        </if>
      </if>
    </where>
  </sql>
  <sql id="Param_Where_Clause_Equal">
    <where>
      <if test="field != null and field.length() > 0">
        <if test="_parameter.containsKey('value') and value != null">
          ${field} = #{value}
        </if>
        <if test="_parameter.containsKey('value1') and _parameter.containsKey('value2')">
          <if test="value1 != null and value2 != null">
            ${field} between #{value1} and #{value2}
          </if>
        </if>
      </if>
    </where>
  </sql>
  <sql id="Param_Where_Clause_Sql">
    <where>
      <if test="sql != null and sql.length() > 0">
        ${sql}
      </if>
      <if test="sql == null or sql.length() == 0">
        str_id is null
      </if>
    </where>
  </sql>
  <select id="selectByExample" parameterType="com.model.StudentRegisterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_student_register
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_student_register
    where str_id = #{strId,jdbcType=VARCHAR}
  </select>
  <select id="selectByMinPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    where str_id = (select min(str_id) from tb_student_register)
  </select>
  <select id="selectByMaxPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    where str_id = (select max(str_id) from tb_student_register)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_student_register
    where str_id = #{strId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.StudentRegisterExample">
    delete from tb_student_register
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="str_id" keyProperty="strId" parameterType="com.model.StudentRegister" useGeneratedKeys="true">
    insert into tb_student_register (str_id, sci_id, sti_id, str_djrq,
      str_jbr, str_lqfs, str_zymc
      )
    values (#{strId,jdbcType=VARCHAR}, #{sciId,jdbcType=VARCHAR}, #{stiId,jdbcType=VARCHAR}, #{strDjrq,jdbcType=TIMESTAMP},
      #{strJbr,jdbcType=VARCHAR}, #{strLqfs,jdbcType=DOUBLE}, #{strZymc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="str_id" keyProperty="strId" parameterType="com.model.StudentRegister" useGeneratedKeys="true">
    insert into tb_student_register
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="strId != null">
        str_id,
      </if>
      <if test="sciId != null">
        sci_id,
      </if>
      <if test="stiId != null">
        sti_id,
      </if>
      <if test="strDjrq != null">
        str_djrq,
      </if>
      <if test="strJbr != null">
        str_jbr,
      </if>
      <if test="strLqfs != null">
        str_lqfs,
      </if>
      <if test="strZymc != null">
        str_zymc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="strId != null">
        #{strId,jdbcType=VARCHAR},
      </if>
      <if test="sciId != null">
        #{sciId,jdbcType=VARCHAR},
      </if>
      <if test="stiId != null">
        #{stiId,jdbcType=VARCHAR},
      </if>
      <if test="strDjrq != null">
        #{strDjrq,jdbcType=TIMESTAMP},
      </if>
      <if test="strJbr != null">
        #{strJbr,jdbcType=VARCHAR},
      </if>
      <if test="strLqfs != null">
        #{strLqfs,jdbcType=DOUBLE},
      </if>
      <if test="strZymc != null">
        #{strZymc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.StudentRegisterExample" resultType="java.lang.Long">
    select count(*) from tb_student_register
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_student_register
    <set>
      <if test="record.strId != null">
        str_id = #{record.strId,jdbcType=VARCHAR},
      </if>
      <if test="record.sciId != null">
        sci_id = #{record.sciId,jdbcType=VARCHAR},
      </if>
      <if test="record.stiId != null">
        sti_id = #{record.stiId,jdbcType=VARCHAR},
      </if>
      <if test="record.strDjrq != null">
        str_djrq = #{record.strDjrq,jdbcType=TIMESTAMP},
      </if>
      <if test="record.strJbr != null">
        str_jbr = #{record.strJbr,jdbcType=VARCHAR},
      </if>
      <if test="record.strLqfs != null">
        str_lqfs = #{record.strLqfs,jdbcType=DOUBLE},
      </if>
      <if test="record.strZymc != null">
        str_zymc = #{record.strZymc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_student_register
    set str_id = #{record.strId,jdbcType=VARCHAR},
      sci_id = #{record.sciId,jdbcType=VARCHAR},
      sti_id = #{record.stiId,jdbcType=VARCHAR},
      str_djrq = #{record.strDjrq,jdbcType=TIMESTAMP},
      str_jbr = #{record.strJbr,jdbcType=VARCHAR},
      str_lqfs = #{record.strLqfs,jdbcType=DOUBLE},
      str_zymc = #{record.strZymc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.StudentRegister">
    update tb_student_register
    <set>
      <if test="sciId != null">
        sci_id = #{sciId,jdbcType=VARCHAR},
      </if>
      <if test="stiId != null">
        sti_id = #{stiId,jdbcType=VARCHAR},
      </if>
      <if test="strDjrq != null">
        str_djrq = #{strDjrq,jdbcType=TIMESTAMP},
      </if>
      <if test="strJbr != null">
        str_jbr = #{strJbr,jdbcType=VARCHAR},
      </if>
      <if test="strLqfs != null">
        str_lqfs = #{strLqfs,jdbcType=DOUBLE},
      </if>
      <if test="strZymc != null">
        str_zymc = #{strZymc,jdbcType=VARCHAR},
      </if>
    </set>
    where str_id = #{strId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.StudentRegister">
    update tb_student_register
    set sci_id = #{sciId,jdbcType=VARCHAR},
      sti_id = #{stiId,jdbcType=VARCHAR},
      str_djrq = #{strDjrq,jdbcType=TIMESTAMP},
      str_jbr = #{strJbr,jdbcType=VARCHAR},
      str_lqfs = #{strLqfs,jdbcType=DOUBLE},
      str_zymc = #{strZymc,jdbcType=VARCHAR}
    where str_id = #{strId,jdbcType=VARCHAR}
  </update>
  <select id="selectAllModel" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
  </select>
  <select id="selectByParam" parameterType="map" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryByParam" parameterType="map" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectByCondition" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryByCondition" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectBySql" resultMap="BaseResultMapExtends" statementType="STATEMENT">
    select
    <include refid="Base_Column_List" />
    from tb_student_register
    <include refid="Param_Where_Clause_Sql" />
  </select>
  <select id="selectFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_student_register
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_student_register
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_student_register
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_student_register
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectFieldsBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Param_Column_List" />
    from tb_student_register
    <include refid="Param_Where_Clause_Sql" />
  </select>
</mapper>