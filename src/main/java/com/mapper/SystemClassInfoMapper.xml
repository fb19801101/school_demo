<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.SystemClassInfoMapper">
  <resultMap id="BaseResultMap" type="com.model.SystemClassInfo">
    <id column="sci_id" jdbcType="VARCHAR" property="sciId" />
    <result column="ssc_code" jdbcType="VARCHAR" property="sscCode" />
    <result column="sgc_code" jdbcType="VARCHAR" property="sgcCode" />
    <result column="sci_name" jdbcType="VARCHAR" property="sciName" />
  </resultMap>
  <resultMap id="BaseResultMapExtends" type="com.model.SystemClassInfo" extends="BaseResultMap">
    <association property="systemGradeCode" javaType="com.model.SystemGradeCode"
                 select="com.mapper.SystemGradeCodeMapper.selectByPrimaryKey" column="sgc_code">
    </association>
    <association property="systemSpecialtyCode" javaType="com.model.SystemSpecialtyCode"
                 select="com.mapper.SystemSpecialtyCodeMapper.selectByPrimaryKey" column="ssc_code">
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Model_Where_Clause">
    <where>
      <if test="record.sciId != null">
        sci_id = #{record.sciId,jdbcType=VARCHAR}
      </if>
      <if test="record.sscCode != null">
        and ssc_code = #{record.sscCode,jdbcType=VARCHAR}
      </if>
      <if test="record.sgcCode != null">
        and sgc_code = #{record.sgcCode,jdbcType=VARCHAR}
      </if>
      <if test="record.sciName != null">
        and sci_name = #{record.sciName,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <sql id="Model_Query_Clause">
    <where>
      <if test="record.sciId != null">
        sci_id like concat('%', #{record.sciId,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.sscCode != null">
        and ssc_code like concat('%', #{record.sscCode,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.sgcCode != null">
        and sgc_code like concat('%', #{record.sgcCode,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.sciName != null">
        and sci_name like concat('%', #{record.sciName,jdbcType=VARCHAR}, '%')
      </if>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sci_id, ssc_code, sgc_code, sci_name
  </sql>
  <sql id="Param_Column_List">
    <if test="fields != null and fields.length() > 0">
      ${fields}
    </if>
    <if test="fields == null or fields.length() == 0">
      <include refid="Base_Column_List" />
    </if>
  </sql>
  <sql id="Param_Where_Clause_Like">
    <where>
      <if test="field != null and field.length() > 0">
        <if test="_parameter.containsKey('value') and value != null">
          ${field} like concat('%', #{value}, '%')
        </if>
      </if>
    </where>
  </sql>
  <sql id="Param_Where_Clause_Equal">
    <where>
      <if test="field != null and field.length() > 0">
        <if test="_parameter.containsKey('value') and value != null">
          ${field} = #{value}
        </if>
        <if test="_parameter.containsKey('value1') and _parameter.containsKey('value2')">
          <if test="value1 != null and value2 != null">
            ${field} between #{value1} and #{value2}
          </if>
        </if>
      </if>
    </where>
  </sql>
  <sql id="Param_Where_Clause_Sql">
    <where>
      <if test="sql != null and sql.length() > 0">
        ${sql}
      </if>
      <if test="sql == null or sql.length() == 0">
        str_id is null
      </if>
    </where>
  </sql>
  <select id="selectByExample" parameterType="com.model.SystemClassInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_system_class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_system_class_info
    where sci_id = #{sciId,jdbcType=VARCHAR}
  </select>
  <select id="selectByMinPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    where sci_id = (select min(sci_id) from tb_system_class_info)
  </select>
  <select id="selectByMaxPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    where sci_id = (select max(sci_id) from tb_system_class_info)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_system_class_info
    where sci_id = #{sciId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.SystemClassInfoExample">
    delete from tb_system_class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="sci_id" keyProperty="sciId" parameterType="com.model.SystemClassInfo" useGeneratedKeys="true">
    insert into tb_system_class_info (sci_id, ssc_code, sgc_code, sci_name
      )
    values (#{sciId,jdbcType=VARCHAR}, #{sscCode,jdbcType=VARCHAR}, #{sgcCode,jdbcType=VARCHAR}, #{sciName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="sci_id" keyProperty="sciId" parameterType="com.model.SystemClassInfo" useGeneratedKeys="true">
    insert into tb_system_class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sciId != null">
        sci_id,
      </if>
      <if test="sscCode != null">
        ssc_code,
      </if>
      <if test="sgcCode != null">
        sgc_code,
      </if>
      <if test="sciName != null">
        sci_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sciId != null">
        #{sciId,jdbcType=VARCHAR},
      </if>
      <if test="sscCode != null">
        #{sscCode,jdbcType=VARCHAR},
      </if>
      <if test="sgcCode != null">
        #{sgcCode,jdbcType=VARCHAR},
      </if>
      <if test="sciName != null">
        #{sciName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.SystemClassInfoExample" resultType="java.lang.Long">
    select count(*) from tb_system_class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_system_class_info
    <set>
      <if test="record.sciId != null">
        sci_id = #{record.sciId,jdbcType=VARCHAR},
      </if>
      <if test="record.sscCode != null">
        ssc_code = #{record.sscCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sgcCode != null">
        sgc_code = #{record.sgcCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sciName != null">
        sci_name = #{record.sciName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_system_class_info
    set sci_id = #{record.sciId,jdbcType=VARCHAR},
      ssc_code = #{record.sscCode,jdbcType=VARCHAR},
      sgc_code = #{record.sgcCode,jdbcType=VARCHAR},
      sci_name = #{record.sciName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.SystemClassInfo">
    update tb_system_class_info
    <set>
      <if test="sscCode != null">
        ssc_code = #{sscCode,jdbcType=VARCHAR},
      </if>
      <if test="sgcCode != null">
        sgc_code = #{sgcCode,jdbcType=VARCHAR},
      </if>
      <if test="sciName != null">
        sci_name = #{sciName,jdbcType=VARCHAR},
      </if>
    </set>
    where sci_id = #{sciId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.SystemClassInfo">
    update tb_system_class_info
    set ssc_code = #{sscCode,jdbcType=VARCHAR},
      sgc_code = #{sgcCode,jdbcType=VARCHAR},
      sci_name = #{sciName,jdbcType=VARCHAR}
    where sci_id = #{sciId,jdbcType=VARCHAR}
  </update>
  <select id="selectAllModel" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
  </select>
  <select id="selectByParam" parameterType="map" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryByParam" parameterType="map" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectByCondition" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryByCondition" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectBySql" resultMap="BaseResultMapExtends" statementType="STATEMENT">
    select
    <include refid="Base_Column_List" />
    from tb_system_class_info
    <include refid="Param_Where_Clause_Sql" />
  </select>
  <select id="selectFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_system_class_info
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_system_class_info
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_system_class_info
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_system_class_info
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectFieldsBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Param_Column_List" />
    from tb_system_class_info
    <include refid="Param_Where_Clause_Sql" />
  </select>
</mapper>