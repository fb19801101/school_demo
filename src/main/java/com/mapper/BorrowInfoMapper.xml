<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.BorrowInfoMapper">
  <resultMap id="BaseResultMap" type="com.model.BorrowInfo">
    <id column="bwi_id" jdbcType="VARCHAR" property="bwiId" />
    <result column="bki_id" jdbcType="VARCHAR" property="bkiId" />
    <result column="sti_id" jdbcType="VARCHAR" property="stiId" />
    <result column="bwi_name" jdbcType="VARCHAR" property="bwiName" />
    <result column="bwi_price" jdbcType="DOUBLE" property="bwiPrice" />
    <result column="bwi_type" jdbcType="VARCHAR" property="bwiType" />
    <result column="bwi_borrow_date" jdbcType="TIMESTAMP" property="bwiBorrowDate" />
    <result column="bwi_count" jdbcType="INTEGER" property="bwiCount" />
    <result column="bwi_return_date" jdbcType="TIMESTAMP" property="bwiReturnDate" />
    <result column="bwi_czy" jdbcType="VARCHAR" property="bwiCzy" />
  </resultMap>
  <resultMap id="BaseResultMapExtends" type="com.model.BorrowInfo" extends="BaseResultMap">
    <association property="bookInfo" javaType="com.model.BookInfo"
                 select="com.mapper.BookInfoMapper.selectByPrimaryKey" column="bki_id">
    </association>
    <association property="studentInfo" javaType="com.model.StudentInfo"
                 select="com.mapper.StudentInfoMapper.selectByPrimaryKey" column="sti_id">
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Model_Where_Clause">
    <where>
      <if test="record.bwiId != null">
        bwi_id = #{record.bwiId,jdbcType=VARCHAR}
      </if>
      <if test="record.bkiId != null">
        and bki_id = #{record.bkiId,jdbcType=VARCHAR}
      </if>
      <if test="record.stiId != null">
        and sti_id = #{record.stiId,jdbcType=VARCHAR}
      </if>
      <if test="record.bwiName != null">
        and bwi_name = #{record.bwiName,jdbcType=VARCHAR}
      </if>
      <if test="record.bwiPrice != null">
        and bwi_price = #{record.bwiPrice,jdbcType=DOUBLE}
      </if>
      <if test="record.bwiType != null">
        and bwi_type = #{record.bwiType,jdbcType=VARCHAR}
      </if>
      <if test="record.bwiBorrowDate != null">
        and bwi_borrow_date = #{record.bwiBorrowDate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.bwiCount != null">
        and bwi_count = #{record.bwiCount,jdbcType=INTEGER}
      </if>
      <if test="record.bwiReturnDate != null">
        and bwi_return_date = #{record.bwiReturnDate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.bwiCzy != null">
        and bwi_czy = #{record.bwiCzy,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <sql id="Model_Query_Clause">
    <where>
      <if test="record.bwiId != null">
        bwi_id like #{record.bwiId,jdbcType=VARCHAR}
      </if>
      <if test="record.bkiId != null">
        and bki_id like #{record.bkiId,jdbcType=VARCHAR}
      </if>
      <if test="record.stiId != null">
        and sti_id like #{record.stiId,jdbcType=VARCHAR}
      </if>
      <if test="record.bwiName != null">
        and bwi_name like #{record.bwiName,jdbcType=VARCHAR}
      </if>
      <if test="record.bwiPrice != null">
        and bwi_price like #{record.bwiPrice,jdbcType=DOUBLE}
      </if>
      <if test="record.bwiType != null">
        and bwi_type like #{record.bwiType,jdbcType=VARCHAR}
      </if>
      <if test="record.bwiBorrowDate != null">
        and bwi_borrow_date like #{record.bwiBorrowDate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.bwiCount != null">
        and bwi_count like #{record.bwiCount,jdbcType=INTEGER}
      </if>
      <if test="record.bwiReturnDate != null">
        and bwi_return_date like #{record.bwiReturnDate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.bwiCzy != null">
        and bwi_czy like #{record.bwiCzy,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bwi_id, bki_id, sti_id, bwi_name, bwi_price, bwi_type, bwi_borrow_date, bwi_count, 
    bwi_return_date, bwi_czy
  </sql>
  <sql id="Param_Column_List">
    <if test="fields != null and fields.length() > 0">
      ${fields}
    </if>
    <if test="fields == null or fields.length() == 0">
      <include refid="Base_Column_List" />
    </if>
  </sql>
  <sql id="Param_Where_Clause_Like">
    <where>
      <if test="field != null and field.length() > 0">
        <if test="_parameter.containsKey('value') and value != null">
          ${field} like concat('%', #{value}, '%')
        </if>
      </if>
    </where>
  </sql>
  <sql id="Param_Where_Clause_Equal">
    <where>
      <if test="field != null and field.length() > 0">
        <if test="_parameter.containsKey('value') and value != null">
          ${field} = #{value}
        </if>
        <if test="_parameter.containsKey('value1') and _parameter.containsKey('value2')">
          <if test="value1 != null and value2 != null">
            ${field} between #{value1} and #{value2}
          </if>
        </if>
      </if>
    </where>
  </sql>
  <sql id="Param_Where_Clause_Sql">
    <where>
      <if test="sql != null and sql.length() > 0">
        ${sql}
      </if>
      <if test="sql == null or sql.length() == 0">
        bwi_id is null
      </if>
    </where>
  </sql>
  <select id="selectByExample" parameterType="com.model.BorrowInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_borrow_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_borrow_info
    where bwi_id = #{bwiId,jdbcType=VARCHAR}
  </select>
  <select id="selectByMinPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    where bwi_id = (select min(bwi_id) from tb_borrow_info)
  </select>
  <select id="selectByMaxPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    where bwi_id = (select max(bwi_id) from tb_borrow_info)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_borrow_info
    where bwi_id = #{bwiId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.BorrowInfoExample">
    delete from tb_borrow_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="bwi_id" keyProperty="bwiId" parameterType="com.model.BorrowInfo" useGeneratedKeys="true">
    insert into tb_borrow_info (bwi_id, bki_id, sti_id, bwi_name,
      bwi_price, bwi_type, bwi_borrow_date, bwi_count, bwi_return_date, bwi_czy
      )
    values (#{bwiId,jdbcType=VARCHAR}, #{bkiId,jdbcType=VARCHAR}, #{stiId,jdbcType=VARCHAR}, #{bwiName,jdbcType=VARCHAR},
      #{bwiPrice,jdbcType=DOUBLE}, #{bwiType,jdbcType=VARCHAR}, #{bwiBorrowDate,jdbcType=TIMESTAMP}, 
      #{bwiCount,jdbcType=INTEGER}, #{bwiReturnDate,jdbcType=TIMESTAMP}, #{bwiCzy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="bwi_id" keyProperty="bwiId" parameterType="com.model.BorrowInfo" useGeneratedKeys="true">
    insert into tb_borrow_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bkiId != null">
        bki_id,
      </if>
      <if test="bwiId != null">
        bwi_id,
      </if>
      <if test="stiId != null">
        sti_id,
      </if>
      <if test="bwiName != null">
        bwi_name,
      </if>
      <if test="bwiPrice != null">
        bwi_price,
      </if>
      <if test="bwiType != null">
        bwi_type,
      </if>
      <if test="bwiBorrowDate != null">
        bwi_borrow_date,
      </if>
      <if test="bwiCount != null">
        bwi_count,
      </if>
      <if test="bwiReturnDate != null">
        bwi_return_date,
      </if>
      <if test="bwiCzy != null">
        bwi_czy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bwiId != null">
        #{bwiId,jdbcType=VARCHAR},
      </if>
      <if test="bkiId != null">
        #{bkiId,jdbcType=VARCHAR},
      </if>
      <if test="stiId != null">
        #{stiId,jdbcType=VARCHAR},
      </if>
      <if test="bwiName != null">
        #{bwiName,jdbcType=VARCHAR},
      </if>
      <if test="bwiPrice != null">
        #{bwiPrice,jdbcType=DOUBLE},
      </if>
      <if test="bwiType != null">
        #{bwiType,jdbcType=VARCHAR},
      </if>
      <if test="bwiBorrowDate != null">
        #{bwiBorrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bwiCount != null">
        #{bwiCount,jdbcType=INTEGER},
      </if>
      <if test="bwiReturnDate != null">
        #{bwiReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bwiCzy != null">
        #{bwiCzy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.BorrowInfoExample" resultType="java.lang.Long">
    select count(*) from tb_borrow_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_borrow_info
    <set>
      <if test="record.bwiId != null">
        bwi_id = #{record.bwiId,jdbcType=VARCHAR},
      </if>
      <if test="record.bkiId != null">
        bki_id = #{record.bkiId,jdbcType=VARCHAR},
      </if>
      <if test="record.stiId != null">
        sti_id = #{record.stiId,jdbcType=VARCHAR},
      </if>
      <if test="record.bwiName != null">
        bwi_name = #{record.bwiName,jdbcType=VARCHAR},
      </if>
      <if test="record.bwiPrice != null">
        bwi_price = #{record.bwiPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.bwiType != null">
        bwi_type = #{record.bwiType,jdbcType=VARCHAR},
      </if>
      <if test="record.bwiBorrowDate != null">
        bwi_borrow_date = #{record.bwiBorrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bwiCount != null">
        bwi_count = #{record.bwiCount,jdbcType=INTEGER},
      </if>
      <if test="record.bwiReturnDate != null">
        bwi_return_date = #{record.bwiReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bwiCzy != null">
        bwi_czy = #{record.bwiCzy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_borrow_info
    set bwi_id = #{record.bwiId,jdbcType=VARCHAR},
      bki_id = #{record.bkiId,jdbcType=VARCHAR},
      sti_id = #{record.stiId,jdbcType=VARCHAR},
      bwi_name = #{record.bwiName,jdbcType=VARCHAR},
      bwi_price = #{record.bwiPrice,jdbcType=DOUBLE},
      bwi_type = #{record.bwiType,jdbcType=VARCHAR},
      bwi_borrow_date = #{record.bwiBorrowDate,jdbcType=TIMESTAMP},
      bwi_count = #{record.bwiCount,jdbcType=INTEGER},
      bwi_return_date = #{record.bwiReturnDate,jdbcType=TIMESTAMP},
      bwi_czy = #{record.bwiCzy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.BorrowInfo">
    update tb_borrow_info
    <set>
      <if test="bkiId != null">
        bki_id = #{bkiId,jdbcType=VARCHAR},
      </if>
      <if test="stiId != null">
        sti_id = #{stiId,jdbcType=VARCHAR},
      </if>
      <if test="bwiName != null">
        bwi_name = #{bwiName,jdbcType=VARCHAR},
      </if>
      <if test="bwiPrice != null">
        bwi_price = #{bwiPrice,jdbcType=DOUBLE},
      </if>
      <if test="bwiType != null">
        bwi_type = #{bwiType,jdbcType=VARCHAR},
      </if>
      <if test="bwiBorrowDate != null">
        bwi_borrow_date = #{bwiBorrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bwiCount != null">
        bwi_count = #{bwiCount,jdbcType=INTEGER},
      </if>
      <if test="bwiReturnDate != null">
        bwi_return_date = #{bwiReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bwiCzy != null">
        bwi_czy = #{bwiCzy,jdbcType=VARCHAR},
      </if>
    </set>
    where bwi_id = #{bwiId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.BorrowInfo">
    update tb_borrow_info
    set bki_id = #{bkiId,jdbcType=VARCHAR},
      sti_id = #{stiId,jdbcType=VARCHAR},
      bwi_name = #{bwiName,jdbcType=VARCHAR},
      bwi_price = #{bwiPrice,jdbcType=DOUBLE},
      bwi_type = #{bwiType,jdbcType=VARCHAR},
      bwi_borrow_date = #{bwiBorrowDate,jdbcType=TIMESTAMP},
      bwi_count = #{bwiCount,jdbcType=INTEGER},
      bwi_return_date = #{bwiReturnDate,jdbcType=TIMESTAMP},
      bwi_czy = #{bwiCzy,jdbcType=VARCHAR}
    where bwi_id = #{bwiId,jdbcType=VARCHAR}
  </update>
  <select id="selectAllModel" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
  </select>
  <select id="selectByParam" parameterType="map" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryByParam" parameterType="map" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectByCondition" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryByCondition" resultMap="BaseResultMapExtends">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectBySql" resultMap="BaseResultMapExtends" statementType="STATEMENT">
    select
    <include refid="Base_Column_List" />
    from tb_borrow_info
    <include refid="Param_Where_Clause_Sql" />
  </select>
  <select id="selectFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_borrow_info
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_borrow_info
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_borrow_info
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from tb_borrow_info
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectFieldsBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Param_Column_List" />
    from tb_borrow_info
    <include refid="Param_Where_Clause_Sql" />
  </select>
</mapper>